<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lch.rbac.dao.UserDao">

    <resultMap type="User" id="userMap">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="gender" property="gender"/>
        <result column="email" property="email"/>
        <result column="create_time" property="createTime"/>
        <result column="last_edit_time" property="lastEditTime"/>
        <result column="status" property="status"/>
        <result column="phone" property="phone"/>
        <collection property="roles" column="ro.id" ofType="Role">
            <id column="roid" property="id"/>
            <result column="rorole_name" property="roleName"/>
            <result column="rodescription" property="description"/>
            <result column="rostart_date" property="startDate"/>
            <result column="roend_date" property="endDate"/>
            <result column="rostatus" property="status"/>
        </collection>
    </resultMap>

    <select id="selectAllUsers" resultType="com.lch.rbac.entities.User">
        select u.id,u.username,u.password,u.nickname,u.phone,u.gender,u.email,u.create_time,u.last_edit_time,u.status
        from tb_user u
    </select>

    <select id="selectCount" resultType="int">
        select
        count(1)
        from
        tb_user u
        <where>
            <if test="userCondition.username!=null">
                and u.username = #{userCondition.username}
            </if>
            <!-- 写like语句的时候 一般都会写成 like '% %' 在mybatis里面写就是应该是 like '%${name} %' 而不是
                '%#{name} %' ${name} 是不带单引号的，而#{name} 是带单引号的 -->
            <if test="userCondition.nickname!=null">
                and u.nickname like '%${userCondition.nickname}%'
            </if>
            <if test="userCondition.status!=null">
                and u.status=#{userCondition.status}
            </if>
            <if test="startTime!=null and endTime!=null">
                and u.create_time between to_date(to_char(#{startTime},'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss') and to_date(to_char(#{endTime},'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss')
            </if>
        </where>
        order by id
    </select>

    <select id="selectUserList" resultType="com.lch.rbac.entities.User">
        <!--分页规律总结：每页显示m条数据，查询第n页数据
        select * from (select tt.*, ROWNUM AS rowno from 要分页的表 tt where ROWNUM<=m*n) table_alias where table_alias.rowno>m*n-m ;-->
        SELECT *
        FROM (SELECT tt.*, ROWNUM AS rowno
            FROM ( select
                    u.id,u.username,u.password,u.nickname,u.phone,u.gender,u.email,u.create_time,u.last_edit_time,u.status
                    from
                    tb_user u
                    <where>
                        <if test="userCondition.username!=null">
                            and u.username = #{userCondition.username}
                        </if>
                        <!-- 写like语句的时候 一般都会写成 like '% %' 在mybatis里面写就是应该是 like '%${name} %' 而不是
                            '%#{name} %' ${name} 是不带单引号的，而#{name} 是带单引号的 -->
                        <if test="userCondition.nickname!=null">
                            and u.nickname like '%${userCondition.nickname}%'
                        </if>
                        <if test="userCondition.status!=null">
                            and u.status=#{userCondition.status}
                        </if>
                        <if test="startTime!=null and endTime!=null">
                            and u.create_time between to_date(to_char(#{startTime},'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss') and to_date(to_char(#{endTime},'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss')
                        </if>
                    </where>
                    order by id) tt
            WHERE ROWNUM &lt;= #{rowIndex}*#{pageSize}) table_alias
        WHERE table_alias.rowno > #{pageSize}*#{rowIndex}-#{pageSize}
    </select>

    <select id="selectUserById" parameterType="int" resultMap="userMap">
        select
        us.*,
        ro.id roid,
        ro.role_name rorole_name,
        ro.description rodescription,
        ro.start_date rostart_date,
        ro.end_date roend_date,
        ro.status rostatus
        from tb_user us left join tb_user_role usro on us.id = usro.user_id
        left join tb_role ro on usro.role_id = ro.id
        where us.id = #{id}
    </select>

    <select id="selectUserByUsername" parameterType="String" resultMap="userMap">
        select
        us.*,
        ro.id roid,
        ro.role_name rorole_name,
        ro.description rodescription,
        ro.start_date rostart_date,
        ro.end_date roend_date,
        ro.status rostatus
        from tb_user us left join tb_user_role usro on us.id = usro.user_id
        left join tb_role ro on usro.role_id = ro.id
        where us.username = #{username}
    </select>

    <insert id="insertUser" parameterType="com.lch.rbac.entities.User">
        /*实现主键自增长*/
        <selectKey keyProperty="id" order="BEFORE" resultType="Integer">
            select nvl(max(id),0)+1 from tb_user
        </selectKey>
        insert into tb_user (id,username,password,nickname,phone,gender,email,create_time,last_edit_time,status)
        values (#{id},#{username},#{password},#{nickname},#{phone},#{gender},#{email},#{createTime},#{lastEditTime},#{status})
    </insert>

    <update id="modifyUser" parameterType="User">
        update tb_user set
        username=#{username},
        password=#{password},
        nickname=#{nickname},
        phone=#{phone},
        gender=#{gender},
        email=#{email},
        last_edit_time=#{lastEditTime},
        status=#{status}
        where id=#{id}
    </update>

    <insert id="batchInsertRole" parameterType="java.util.List">
        insert into tb_user_role
        (user_id, role_id)
        select t.* from
        (
        <foreach collection="list" item="item" separator="union all">
            select
            #{item.userId},
            #{item.roleId}
            from dual
        </foreach>
        ) t
    </insert>

    <delete id="deleteUserRoleByUserId" parameterType="int">
        delete from tb_user_role
        where user_id = #{userId}
    </delete>

    <delete id="deleteUserByUserId" parameterType="int">
        delete from tb_user
        where id = #{userId}
    </delete>

</mapper>